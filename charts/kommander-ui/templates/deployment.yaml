---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kommander.fullname" . }}
  labels:
    app: {{ template "kommander.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "kommander.fullname" . }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        app: {{ template "kommander.fullname" . }}
      namespace: {{ .Release.Namespace }}
    spec:
      serviceAccountName: {{ template "kommander.fullname" . }}-sa
      imagePullSecrets:
        - name: dockerhub
      initContainers:
        {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if ne .Values.mode "dispatch" }}
      volumes:
        - name: certs
          secret:
            secretName: {{ .Values.utilityServiceCertSecret }}
      {{- end }}
      containers:
        - name: {{ template "kommander.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ default (tpl .Values.image.defaultTag .) .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - name: http
              containerPort: 4000
          resources:
            {{ with .Values.resources }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          {{- if ne .Values.mode "dispatch" }}
          volumeMounts:
            - mountPath: {{ .Values.utilityServiceCertMountpath }}
              name: certs
              subPath: ca.crt
          {{- end }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ tpl $value $ | quote }}
            {{- end }}
            - name: FED_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOGOUT_REDIRECT_PATH
              value: {{ .Values.logoutRedirectPath | quote }}
            - name: KONVOY_BASE_PATH
              value: {{ .Values.konvoyBasePath | quote }}
            - name: MODE
              value: {{ .Values.mode | quote }}
            - name: CLUSTER_POLLING_INTERVAL_FAST
              value: {{ .Values.clusterPollingIntervalFast | quote }}
            - name: CLUSTER_POLLING_INTERVAL_MEDIUM
              value: {{ .Values.clusterPollingIntervalMedium | quote }}
            - name: CLUSTER_POLLING_INTERVAL_SLOW
              value: {{ .Values.clusterPollingIntervalSlow | quote }}
            - name: CLUSTER_POLLING_STAGGER_FACTOR
              value: {{ .Values.clusterPollingStaggerFactor | quote }}
            - name: HOST_POLLING_INTERVAL
              value: {{ .Values.hostPollingInterval | quote }}
            - name: SUPPORTED_KUBERNETES_VERSIONS
              value: {{ .Values.kubernetesVersionsSelection | toJson }}
            - name: KUBEADDONS_ADDRESS
              value: "http://{{ .Values.kubeaddonsAddress }}.{{ .Release.Namespace }}.svc"
            - name: IMPERSONATE_USER
              value: {{ .Values.impersonateUser | quote }}
            - name: SHOW_COSTS
              value: {{ .Values.showCost | quote }}
            - name: SHOW_CD
              value: {{ .Values.showCD | quote }}
            - name: KUBECOST_ENDPOINT
              value: {{ .Values.kubecostEndpoint | quote }}
            - name: KUBECOST_WEB_UI
              value: {{ .Values.kubecostWebUi | quote }}
            - name: KCL_UTILITY_ENDPOINT
              value: {{ .Values.kclUtilityEndpoint | quote }}
            - name: UTILITY_SERVICE_NAME
              value: {{ .Values.utilityServiceName | quote }}
            {{- if .Values.tracing.enabled }}
            - name: JAEGER_SERVICE_NAME
              value: {{ .Values.tracing.serviceName | quote }}
            - name: JAEGER_SAMPLER_TYPE
              value: {{ .Values.tracing.sampler | quote }}
            - name: JAEGER_SAMPLER_PARAM
              value: {{ .Values.tracing.samplerParam | quote }}
            - name: JAEGER_ENDPOINT
              value: {{ .Values.tracing.jaegerEndpoint | quote }}
            {{- else }}
            - name: JAEGER_DISABLED
              value: "true"
            {{- end }}
            {{- if .Values.ingress.enabled }}
            - name: PRODUCT_ENDPOINT
              value: {{ .Values.ingress.path | quote }}
            {{- end }}
            - name: UTILITY_SERVICE_CERT
              value: {{ .Values.utilityServiceCertMountpath | quote }}

